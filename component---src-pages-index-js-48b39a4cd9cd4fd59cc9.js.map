{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./src/components/ProfilePic.js","webpack:///./src/components/Info.js","webpack:///./src/data/history.js","webpack:///./src/components/HistoryDiagram.js","webpack:///./src/components/History.js","webpack:///./src/components/Skills.js","webpack:///./src/pages/index.js","webpack:///./src/components/Header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js"],"names":["SEO","_ref","description","lang","meta","keywords","site","_334267118","data","metaDescription","siteMetadata","title","react_default","a","createElement","Helmet_default","htmlAttributes","name","content","property","twitter","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","ProfilePic","fluid","_2069794361","placeholderImage","childImageSharp","gatsby_image_default","alt","className","styles","img","subtitle","subtitleLarge","subtitleWeb","subtitlePrint","Info","_staticQueryData$data","_1172990352","author","dateOfBirth","email","github","phone","useQueryParam","StringParam","react","infoGrid","age","href","start","Date","data_history","from","location","to","style","fontSize","end","addMonths","totalMonths","differenceInCalendarMonths","HistoryDiagram","diagram","entries","map","i","backgroundColor","schemeDark2","monthsBeforeFrom","topPercent","bottomPercent","key","entry","gridTemplateRows","bar","History","display","gridTemplateColumns","columnGap","components_HistoryDiagram","infoStyles","color","fontFamily","textAlign","lineHeight","marginBottom","Skills","IndexPage","Layout","components_SEO","topSection","infoWrapper","components_Info","profilePicWrapper","components_ProfilePic","components_History","components_Skills","Header","siteTitle","header","Footer","_396107292","webVersionUrl","Fragment","footer","footerWeb","footerPrint","children","_856328897","components_Header","margin","maxWidth","padding","components_Footer","node","isRequired"],"mappings":"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","file":"component---src-pages-index-js-48b39a4cd9cd4fd59cc9.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            twitter\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const title = site.siteMetadata.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      // titleTemplate={\n      //   title ? `%s | ${site.siteMetadata.title}` : site.siteMetadata.title\n      // }\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: `@${site.siteMetadata.twitter}`,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default SEO;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport styles from './ProfilePic.module.css';\n\nconst ProfilePic = () => {\n  const {\n    placeholderImage: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"profile-pic.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1024) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <div>\n      <Img fluid={fluid} alt=\"Profile picture\" className={styles.img} />\n      <div className={styles.subtitle}>\n        <div className={styles.subtitleLarge}>\n          picture blurred - equal chances for everyone\n        </div>\n        <div className={styles.subtitleWeb}>press to reveal</div>\n        <div className={styles.subtitlePrint}>\n          visit web version to view picture\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePic;\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useQueryParam, StringParam } from 'use-query-params';\nimport age from 's-age';\n\nimport styles from './Info.module.css';\n\nconst Info = () => {\n  const {\n    site: {\n      siteMetadata: { author, dateOfBirth, email, github },\n    },\n  } = useStaticQuery(graphql`\n    query InfoQuery {\n      site {\n        siteMetadata {\n          author\n          dateOfBirth\n          email\n          github\n        }\n      }\n    }\n  `);\n  const [phone] = useQueryParam('phone', StringParam);\n\n  return (\n    <section>\n      <h2>Personal & contact information</h2>\n      <div className={styles.infoGrid}>\n        <div>Name</div>\n        <div>{author}</div>\n        <div>Born</div>\n        <div>\n          {dateOfBirth} (age {age(dateOfBirth)})\n        </div>\n        <div>Nationality</div>\n        <div>German (EU citizenship)</div>\n        <div>Languages</div>\n        <div>English (fluent), German (native)</div>\n        <small>&nbsp;</small>\n        <small>&nbsp;</small>\n        <div>Email</div>\n        <div>\n          <a href={`mailto:${email}`}>{email}</a>\n        </div>\n        <div>Phone</div>\n        <div>{(phone && `+${phone}`) || '<hidden in public version>'}</div>\n        <div>GitHub</div>\n        <div>\n          <a href={`https://github.com/${github}`}>{github}</a>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Info;\n","import * as React from 'react';\n\nexport const start = new Date('2014-01');\nexport default [\n  {\n    from: '2019-01',\n    location: 'Remote',\n    description: (\n      <>\n        <a href=\"https://github.com/facebook/jest\">Jest</a> core contributor in\n        spare time, development of a popular open-source JavaScript testing\n        platform\n      </>\n    ),\n  },\n  {\n    from: '2018-10',\n    location: 'DTM/CGN/BER, DE',\n    description: (\n      <>\n        Software Engineer at <a href=\"https://www.adesso.de/\">adesso AG</a>,\n        full-stack JavaScript web development in a customer project using Scrum\n        methodology\n      </>\n    ),\n  },\n  {\n    from: '2017-07',\n    to: '2018-09',\n    location: 'Dortmund, DE',\n    description: (\n      <>\n        Part-time working student at{' '}\n        <a href=\"https://www.adesso.de/\">adesso AG</a>, agile product\n        development of an IoT and data visualization platform\n      </>\n    ),\n  },\n  {\n    from: '2014-09',\n    to: '2018-12',\n    location: 'Dortmund, DE',\n    description: (\n      <>\n        <div>\n          Student at{' '}\n          <a href=\"https://www.fh-dortmund.de/\">Fachhochschule Dortmund</a>{' '}\n          University of Applies Sciences and Arts\n        </div>\n        <small>\n          <div>\n            Awarded Bachelor of Science in Software Engineering (orig.\n            \"Softwaretechnik\")\n          </div>\n          <div>Final grade 1.2 (scale 1.0 best to 4.0 worst)</div>\n          <div>\n            <small style={{ fontSize: '75%' }}>\n              Thesis title: Compile-time abstraction of JavaScript mocking\n              libraries powering a domain-specific language for interaction\n              testing\n            </small>\n          </div>\n        </small>\n      </>\n    ),\n  },\n  {\n    from: '2014-08',\n    to: '2017-06',\n    location: 'Dortmund, DE',\n    description: (\n      <>\n        Vocational education at <a href=\"https://www.adesso.de/\">adesso AG</a>{' '}\n        with parallel studies, development of Java backends and JavaScript\n        frontends for internal web applications\n      </>\n    ),\n  },\n  {\n    to: '2014-06',\n    location: 'Wetter, DE',\n    description: (\n      <>\n        <div>Secondary education, concluded with Abitur</div>\n        <small>\n          <div>\n            Average grade 1.6 (equiv. A in US / UK, scale 1.0 best to 4.0 worst)\n          </div>\n        </small>\n      </>\n    ),\n  },\n];\n","import * as React from 'react';\nimport { schemeDark2 } from 'd3-scale-chromatic';\nimport { addMonths, differenceInCalendarMonths } from 'date-fns';\n\nimport entries, { start } from '../data/history';\nimport styles from './HistoryDiagram.module.css';\n\nconst end = addMonths(new Date(), 1);\nconst totalMonths = differenceInCalendarMonths(end, start);\n\nconst HistoryDiagram = () => (\n  <div className={styles.diagram}>\n    {entries.map(({ from, to }, i) => {\n      const backgroundColor = schemeDark2[i % schemeDark2.length];\n\n      const monthsBeforeFrom = differenceInCalendarMonths(from || start, start);\n      const monthsAfterTo = differenceInCalendarMonths(\n        end,\n        (to && addMonths(to, 1)) || end,\n      );\n\n      const topPercent = `${(monthsAfterTo * 100) / totalMonths}%`;\n      const bottomPercent = `${(monthsBeforeFrom * 100) / totalMonths}%`;\n\n      return (\n        <div\n          key={i}\n          className={styles.entry}\n          style={{\n            gridTemplateRows: `${topPercent} auto ${bottomPercent}`,\n          }}\n        >\n          <div className={styles.bar} style={{ backgroundColor }} />\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport default HistoryDiagram;\n","import * as React from 'react';\nimport { schemeDark2 } from 'd3-scale-chromatic';\n\nimport HistoryDiagram from './HistoryDiagram';\nimport infoStyles from './Info.module.css';\nimport entries from '../data/history';\n\nconst History = () => (\n  <section>\n    <h2>Education & experience</h2>\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: '1cm auto',\n        columnGap: '5mm',\n      }}\n    >\n      <aside>\n        <HistoryDiagram />\n      </aside>\n      <div className={infoStyles.infoGrid}>\n        {entries.map(({ from, to, description, location }, i) => (\n          <React.Fragment key={i}>\n            <div\n              style={{\n                color: schemeDark2[i % schemeDark2.length],\n              }}\n            >\n              <div\n                style={{\n                  fontFamily: 'monospace',\n                  textAlign: from ? 'left' : 'right',\n                }}\n              >\n                {from} - {to}\n              </div>\n              {location && (\n                <small>\n                  <div style={{ textAlign: 'center' }}>{location}</div>\n                </small>\n              )}\n            </div>\n            <div style={{ lineHeight: '1.25rem', marginBottom: '0.25rem' }}>\n              {description}\n            </div>\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  </section>\n);\n\nexport default History;\n","import * as React from 'react';\n\nimport infoStyles from './Info.module.css';\n\nconst Skills = () => (\n  <section>\n    <h2>Programming & technology</h2>\n    <div className={infoStyles.infoGrid}>\n      <div>Paradigms</div>\n      <div>\n        Functional, Functional & Reactive, Declarative, Imperative,\n        Object-oriented\n      </div>\n      <div>Main interests</div>\n      <div>\n        Testing, Compilers & static analysis, Tooling & DX, Build systems, Web\n        technologies\n      </div>\n      <div>Testing</div>\n      <div>Integration, Unit, E2E, UI, TDD, Property-based</div>\n      <div>Languages</div>\n      <div>\n        <em>Primary:</em> JavaScript, TypeScript, HTML, CSS, Java\n        <br />\n        <em>Used</em>: Rust, Reason, Flow, Groovy, Golang, C++, C, Bash\n      </div>\n      <div>Tools</div>\n      <div>\n        <em>In-depth knowledge:</em> Jest, Babel, Gradle, Git, Vim, Linux\n        <br />\n        <em>Other:</em> Various CI/CD, macOS, Node.js & most of the JS ecosystem\n      </div>\n      <div>Libraries</div>\n      <div>\n        <em>Selection:</em> React, Angular, Cycle.js, RxJS, Express, Spring\n      </div>\n      <div>Databases</div>\n      <div>Neo4j, MongoDB, various SQL-based, ORMs</div>\n    </div>\n  </section>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport ProfilePic from '../components/ProfilePic';\nimport Info from '../components/Info';\nimport History from '../components/History';\nimport Skills from '../components/Skills';\n\nimport styles from './index.module.css';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO />\n    <div className={styles.topSection}>\n      <div className={styles.infoWrapper}>\n        <Info />\n      </div>\n      <aside className={styles.profilePicWrapper}>\n        <ProfilePic />\n      </aside>\n    </div>\n    <hr />\n    <History />\n    <hr />\n    <Skills />\n  </Layout>\n);\n\nexport default IndexPage;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './Header.module.css';\n\nconst Header = ({ siteTitle }) => (\n  <header className={styles.header}>\n    <div className={styles.title}>\n      <h1>{siteTitle}</h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport styles from './Footer.module.css';\n\nconst Footer = () => {\n  const {\n    site: {\n      siteMetadata: { author, github },\n    },\n  } = useStaticQuery(graphql`\n    query FooterQuery {\n      site {\n        siteMetadata {\n          author\n          github\n        }\n      }\n    }\n  `);\n  const webVersionUrl = `https://${github}.github.io/cv`;\n\n  return (\n    <>\n      <hr />\n      <footer className={styles.footer}>\n        <div className={styles.footerWeb}>\n          Built by\n          {` `}\n          <a href={`https://github.com/${github}`}>{author}</a>\n        </div>\n        <div className={styles.footerPrint}>\n          Web version at{' '}\n          <a href={webVersionUrl}>\n            <code>{webVersionUrl}</code>\n          </a>\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './Header';\nimport Footer from './Footer';\nimport './Layout.css';\n\nconst Layout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { title },\n    },\n  } = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: '210mm',\n          padding: `0 1rem 0.5rem 1rem`,\n        }}\n      >\n        <main>{children}</main>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}